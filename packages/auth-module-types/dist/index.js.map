{"version":3,"sources":["/webpack/bootstrap","../src/index.ts"],"names":[],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACzCA;;GAEG;AACF,IAAY,QAMZ;AANA,WAAY,QAAQ;IACnB,+BAAmB;IACnB,uDAA2C;IAC3C,qDAAyC;IACzC,qDAAyC;IACzC,2CAA+B;AACjC,CAAC,EANY,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAMpB;AAEY,oBAAY,GAAG;IAC1B,QAAQ,CAAC,OAAO;IAChB,QAAQ,CAAC,mBAAmB;IAC5B,QAAQ,CAAC,kBAAkB;IAC3B,QAAQ,CAAC,kBAAkB;IAC3B,QAAQ,CAAC,aAAa;CACvB,CAAC;AAMY,qBAAa,GAAkB;IAC3C,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU;IAC9B,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,sBAAsB;IACtD,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,qBAAqB;IACpD,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,eAAe;IAC9C,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,sBAAsB;CACjD;AAGY,uBAAe,GAA6B;IACvD,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK;IACzB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,EAAE,MAAM;IACtC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,MAAM;IACrC,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,KAAK;IACpC,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,MAAM;CACjC","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t__webpack_require__.ab = __dirname + \"/\";\n\n \t// the startup function\n \tfunction startup() {\n \t\t// Load entry module and return exports\n \t\treturn __webpack_require__(980);\n \t};\n\n \t// run startup\n \treturn startup();\n","import { Handler as ExpressHandler } from 'express';\n\n/**\n * Liste des Handlers proposé par ce module\n */\n export enum Endpoint {\n  _HEALTH = '_HEALTH',\n  GENERATE_USER_TOKEN = 'GENERATE_USER_TOKEN',\n  REFRESH_USER_TOKEN = 'REFRESH_USER_TOKEN',\n  FIND_USER_BY_EMAIL = 'FIND_USER_BY_EMAIL',\n  SEND_PWD_LINK = 'SEND_PWD_LINK',\n}\n\nexport const allEndpoints = [\n  Endpoint._HEALTH,\n  Endpoint.GENERATE_USER_TOKEN,\n  Endpoint.REFRESH_USER_TOKEN,\n  Endpoint.FIND_USER_BY_EMAIL,\n  Endpoint.SEND_PWD_LINK,\n];\n\n/**\n * Mapping des handlers à l'url d'une route\n */\n export type EndpointsUrls = Record<Endpoint, string>;\n export const endpointsUrls: EndpointsUrls = {\n  [Endpoint._HEALTH]: '/_health',\n  [Endpoint.GENERATE_USER_TOKEN]: '/generate-user-token',\n  [Endpoint.REFRESH_USER_TOKEN]: '/refresh-user-token',\n  [Endpoint.FIND_USER_BY_EMAIL]: '/users/:email',\n  [Endpoint.SEND_PWD_LINK]: '/send-reset-pwd-link',\n}\n\ntype Method = 'all' | 'get' | 'post' | 'put' | 'delete' | 'patch' | 'options' | 'head';\nexport const EndpointMethods: Record<Endpoint, Method> = {\n  [Endpoint._HEALTH]: 'get',\n  [Endpoint.GENERATE_USER_TOKEN]: 'post',\n  [Endpoint.REFRESH_USER_TOKEN]: 'post',\n  [Endpoint.FIND_USER_BY_EMAIL]: 'get',\n  [Endpoint.SEND_PWD_LINK]: 'post',\n}\n\nexport namespace HttpResponses {\n  export type _HEALTH = {\n    success: boolean,\n  }\n  export type GENERATE_USER_TOKEN = {\n    access_token: string,\n    expires_in: number,\n    refresh_token: string,\n    token_type: string,\n  }\n  export type REFRESH_USER_TOKEN = {\n    data: {\n      access_token: string,\n      refresh_token: string,\n      token_type: string,\n      expires_in: number,\n    },\n    expires: number,\n  }\n  export type FIND_USER_BY_EMAIL = any;\n  export type SEND_PWD_LINK = any;\n}\n\nexport type Handlers = Record<Endpoint, {\n  method: Method,\n  path: string,\n  handler: ExpressHandler\n}>;"],"sourceRoot":""}